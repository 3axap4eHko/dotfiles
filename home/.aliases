alias ll='ls -alhF'
alias la='ls -Ah'
alias l='ls -CFh'

alias mkbackup='zip -r backup-$(date +%s).zip ~/projects ~/.bin ~/.npmrc ~/.yarnrc ~/.ssh ~/.bashrc ~/.prettierrc ~/.gitconfig ~/.wakatime* ~/*.kdbx ~/.aws -x "**/node_modules/*" -x "**/.next/*" -x "**/.venv/*" -x "**/.yarn/*" -x "**/build/*" -x "**/dist/*" -x "**/.nx/*"'
alias mkclean="rm -rf ~/.npm && rm -rf ~/.yarn && find ~/projects \( -name 'node_modules' -o -name '.next' -o name '.nx' \) -type d -prune -exec rm -rf '{}' +"
alias mkrsa='ssh-keygen -t rsa -b 4096 -N "" -C $2 -f ~/.ssh/$1_rsa'
alias mkplaylist='find -type f -iname "*.mp4" -or -iname "*.mp3" -or -iname "*.flac" -or -iname "*.m4a" | sort > playlist.m3u'
alias xtype=$'sh -c \'sleep 5; xdotool type "$(xclip -o -selection clipboard)"\''
alias vim=nvim

# NodeJS
alias pn=pnpm
alias pnx='pnpm dlx'
alias nx='pnx nx'

# Python
alias venv='python3 -m venv $1'

# Normalize `pbcopy` across Linux, macOS, and Windows.
if [[ "$OS" == "WINDOWS" ]]; then
	alias pbcopy='clip.exe'
elif [[ "$OS" == "LINUX" ]]; then
	alias pbcopy='xclip -i -selection clipboard'
fi

# Normalize `pbpaste` across Linux, macOS, and Windows.
if [[ "$OS" == "WINDOWS" ]]; then
	alias pbpaste='powershell.exe Get-Clipboard'
elif [[ "$OS" == "LINUX" ]]; then
	alias pbpaste='xclip -o'
fi

# Normalize `open` across Linux, macOS, and Windows.
# This is needed to make the `o` function (see below) cross-platform.
if [[ "$OS" == "WINDOWS" ]]; then
	alias open='explorer.exe'
elif [[ "$OS" == "LINUX" ]]; then
	alias open='xdg-open'
fi
